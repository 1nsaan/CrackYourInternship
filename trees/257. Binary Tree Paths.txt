/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> ans = new LinkedList<>();
        explore(root,ans,"");
        return ans;
    }
    void explore(TreeNode root, List<String> ans , String path){
        if(root==null) return ;
        String p = root.val + "";
        if(root.left==null && root.right==null){
            path+=p;
            ans.add(path);
            return ;
        }
            explore(root.left, ans,path+p+"->");
            explore(root.right,ans, path+p+"->");
    
    }
}